<%- include('./partials/head') %>
<div class="centrato_iniziale" id="centrato_iniziale">
  <button class="btn border p-3 rounded box-shadow" id="fullscreen-button">
    Avvia Monitor a schermo intero
  </button>
</div>
<div
  class="monitor_container"
  id="monitor_container"
  style="display: none; margin-top: -50px"
>
  <div class="top_container">
    <div class="date_time_container">
      <div class="day_container"></div>
      <div class="time_container"></div>
    </div>
  </div>
  <div class="bottom_container">
    <div class="left_container">
      <div id="big_box"></div>
    </div>
    <div class="right_container">
      <div class="stacked_box" id="uno"></div>
      <div class="stacked_box" id="due"></div>
      <div class="stacked_box" id="tre"></div>
      <div class="stacked_box" id="quattro"></div>
    </div>
  </div>
</div>

<!-- Aggiungi un elemento audio -->
<audio id="notification-sound" src="/coin.wav"></audio>

<script>
  let audioAllowed = false;

  document.addEventListener("click", () => {
    if (!audioAllowed) {
      audioAllowed = true;
    }
  });

  const getLastTicketCalled = () => {
    fetch("/ticket/last")
      .then((response) => response.json())
      .then((data) => {
        data.sort((a, b) => new Date(b.called_at) - new Date(a.called_at));
        data = data.slice(0, 5);

        // data chiave 0, se c'è, lo metto nel big_box
        if (data[0]) {
          const ticket = data[0];
          document.getElementById("big_box").innerHTML = `
            <div class="ticket_container">
            <div class="ticket_code" style="text-shadow: 2px 2px 2px red;">${ticket.ticket_code}</div>
            <p class="label_ticket_monitor" style="text-shadow: 2px 2px 2px red;">${ticket.customer_name}</p>
            <div class="desk_name" style="text-shadow: 2px 2px 2px red;">${ticket.desk_name}</div>
          </div>
          `;
        }

        // data chiave 1, se c'è, lo metto nel primo stacked_box
        if (data[1]) {
          const ticket = data[1];
          document.getElementById("uno").innerHTML = miniCard(
            ticket.ticket_code,
            ticket.desk_name
          );
        }

        // data chiave 2, se c'è, lo metto nel secondo stacked_box
        if (data[2]) {
          const ticket = data[2];
          document.getElementById("due").innerHTML = miniCard(
            ticket.ticket_code,
            ticket.desk_name
          );
        }

        // data chiave 3, se c'è, lo metto nel terzo stacked_box
        if (data[3]) {
          const ticket = data[3];
          document.getElementById("tre").innerHTML = miniCard(
            ticket.ticket_code,
            ticket.desk_name
          );
        }

        // data chiave 4, se c'è, lo metto nel quarto stacked_box
        if (data[4]) {
          const ticket = data[4];
          document.getElementById("quattro").innerHTML = miniCard(
            ticket.ticket_code,
            ticket.desk_name
          );
        }

        // suono notifica
        document.getElementById("notification-sound").play();
      });
  };

  const miniCard = (ticket_code, desk_name) => {
    return `
        <div class="mini_container">
            <div class="mini_ticket_code">${ticket_code}</div>
            <p class="mini_ticket_desk">${desk_name}</p>
        </div>
    `;
  };

  document.addEventListener("DOMContentLoaded", () => {
    getLastTicketCalled();

    document.querySelector(".day_container").innerText =
      new Date().toLocaleDateString("it-IT", {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
      });

    setInterval(() => {
      document.querySelector(".time_container").innerText =
        new Date().toLocaleTimeString("it-IT", {
          hour: "2-digit",
          minute: "2-digit",
          second: "2-digit",
        });
    }, 1000);
  });

  const socket = io();
  socket.on("my_ticket", () => {
    getLastTicketCalled();
  });

  document
    .getElementById("fullscreen-button")
    .addEventListener("click", function () {
      if (document.documentElement.requestFullscreen) {
        document.documentElement.requestFullscreen();
      } else if (document.documentElement.mozRequestFullScreen) {
        // Firefox
        document.documentElement.mozRequestFullScreen();
      } else if (document.documentElement.webkitRequestFullscreen) {
        // Chrome, Safari and Opera
        document.documentElement.webkitRequestFullscreen();
      } else if (document.documentElement.msRequestFullscreen) {
        // IE/Edge
        document.documentElement.msRequestFullscreen();
      }

      // display none al pulsante
      document.getElementById("centrato_iniziale").style.display = "none";
      document.getElementById("monitor_container").style.display = "block";
      document.getElementById("monitor_container").style.marginTop = "-100 px";
    });

  document.addEventListener("fullscreenchange", function () {
    if (!document.fullscreenElement) {
      document.getElementById("centrato_iniziale").style.display = "block";
      document.getElementById("monitor_container").style.display = "none";
    }
  });

  document.addEventListener("mozfullscreenchange", function () {
    if (!document.mozFullScreenElement) {
      document.getElementById("centrato_iniziale").style.display = "block";
      document.getElementById("monitor_container").style.display = "none";
    }
  });

  document.addEventListener("webkitfullscreenchange", function () {
    if (!document.webkitFullscreenElement) {
      document.getElementById("centrato_iniziale").style.display = "block";
      document.getElementById("monitor_container").style.display = "none";
    }
  });

  document.addEventListener("msfullscreenchange", function () {
    if (!document.msFullscreenElement) {
      document.getElementById("centrato_iniziale").style.display = "block";
      document.getElementById("monitor_container").style.display = "none";
    }
  });
</script>
